w-input,
w-input-pass {
  position: relative;
  user-select: none;

  display: flex;
  align-items: center;
  gap: var(--sm);

  height: var(--component-lg);
  border-radius: var(--xxs);

  font-size: var(--font-lg);
  padding-inline: var(--md);
  box-shadow: 0 0 0 1px inset var(--outline);

  background: var(--surface);
  color: var(--outline-variant);

  transition: box-shadow 0.2s var(--timing-standard);

  input {
    border: none;
    outline: none;
    background: none;
    font: inherit;

    height: 100%;
    width: 100%;
  }

  input:-webkit-autofill,
  input:-webkit-autofill::first-line {
    transition: background-color 5000s ease-in-out 0s;
    -webkit-text-fill-color: var(--outline-variant) !important;
    font: inherit;
    color: currentColor;
  }

  > div {
    position: relative;
    display: flex;
    align-items: center;
    gap: var(--xxs);
    height: 100%;
    width: 100%;
  }

  [label] {
    display: flex;
    align-items: center;

    position: absolute;
    top: 50%;
    left: 0;
    transform: translateY(-50%);

    transition: all 0.2s var(--timing-standard);
  }

  /* Moves the label to the top */
  &:active,
  &:has(input:focus),
  &:has(input:not(:placeholder-shown)),
  &[forced-label] {
    [label] {
      top: -10%;
      left: calc(var(--xxs) / 2 * -1);
      transform: translateY(0);

      background: var(--surface);
      padding-inline: var(--xxs);

      font-size: var(--font-sm);
    }
  }

  &:active,
  &:has(:focus),
  &[forced-label] {
    box-shadow: 0 0 0 2px inset var(--primary);

    [label] {
      color: var(--primary);
    }
  }

  /* 
   * Hides the field content unless the placeholder is shown 
   * unless the input is focused or the current element was active
   * i'm sorry for this abomination of a selector
   */
  &:has(input:placeholder-shown:not(:focus)):not(:active):not([forced-label]) {
    & > div > :not([label]) {
      opacity: 0;
    }
  }

  &:has(input:required) [label]::after {
    content: '*';
    color: var(--error);
  }

  &:has(input:user-invalid) {
    box-shadow: 0 0 0 2px inset var(--error);
  }

  &:has(input:disabled) {
    opacity: 0.5;
    pointer-events: none;
  }

  [eye] {
    cursor: pointer;
  }
}

w-input-divider {
  font-size: var(--font-sm);
  font-weight: 700;

  display: flex;
  align-items: center;
  justify-content: space-between;
  text-transform: uppercase;
  gap: var(--xxs);

  position: sticky;
  top: 0;
  z-index: 1;
  background: var(--surface);

  height: var(--xl);

  iconify-icon {
    cursor: pointer;
  }
}
