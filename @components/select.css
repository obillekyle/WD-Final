@import url('./input.css');

w-dropdown,
w-select {
  display: flex;
  flex-direction: column;
  min-width: 200px;

  position: relative;

  &:has([replaced]) [left-icon] {
    display: none;
  }

  [select] {
    position: relative;
    user-select: none;
    cursor: pointer;

    display: flex;
    align-items: center;
    gap: var(--sm);

    height: var(--component-lg);
    border-radius: var(--xxs);

    font-size: var(--font-lg);
    padding-inline: var(--md);
    box-shadow: 0 0 0 1px inset var(--outline);

    background: var(--surface);
    color: var(--outline-variant);

    transition: box-shadow 0.2s var(--timing-standard);

    input {
      position: absolute;
      pointer-events: none;
      opacity: 0;
    }

    > div {
      position: relative;
      display: flex;
      align-items: center;
      gap: var(--xxs);
      height: 100%;
      flex: 1;
    }

    &:has([left-icon], [replaced]) {
      > div {
        max-width: calc(100% - var(--component-md) * 1.5);
      }
    }

    [display] {
      text-overflow: ellipsis;
      overflow: hidden;
      white-space: nowrap;
      max-width: 100%;
      color: var(--on-surface);
    }

    [label] {
      display: flex;
      align-items: center;
      max-width: 100%;

      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;

      position: absolute;
      top: 50%;
      left: 0;
      transform: translateY(-50%);

      transition: all 0.2s var(--timing-standard);
    }

    /* Moves the label to the top */
    &:has([display]:not(:empty)) {
      [label] {
        top: -10%;
        left: calc(var(--xxs) / 2 * -1);
        transform: translateY(0);

        background: var(--surface);
        padding-inline: var(--xxs);

        font-size: var(--font-sm);
      }
    }

    &:has([display]:empty) {
      & > div > :not([label]) {
        opacity: 0;
      }
    }

    &:has(input:required) [label]::after {
      content: '*';
      color: var(--error);
    }

    &:has(input:user-invalid) {
      box-shadow: 0 0 0 2px inset var(--error);
    }
  }

  [expand] {
    transition: all 0.2s var(--timing-standard);
    transform: scaleY(1);
  }

  [options] {
    display: none;
    max-height: 0;
    overflow: auto;

    position: absolute;
    top: var(--component-lg);
    width: 100%;
    z-index: 2;

    scrollbar-width: none;

    flex-direction: column;
    padding-inline: var(--xxs);
    border-radius: 0 0 var(--xxs) var(--xxs);

    box-shadow: 0 0 0 1px inset var(--outline);
    transition: all 0.2s var(--timing-standard) allow-discrete;
    background: var(--surface);

    &:empty::after {
      content: 'No options';
      justify-content: center;
      opacity: 0.5;
    }

    [option],
    &::after {
      display: flex;
      align-items: center;
      gap: var(--sm);
      padding-inline: var(--sm);
      border-radius: var(--xxs);
      height: var(--component-md);
      user-select: none;
      flex-shrink: 0;
      cursor: pointer;
      transition: inherit;

      > * {
        pointer-events: none;
      }

      position: relative;
      overflow: hidden;

      &:first-child {
        margin-top: var(--xs);
      }

      &:last-child {
        margin-bottom: var(--xs);
      }

      &[checked] {
        background: var(--primary);
        color: var(--pure);
      }
    }

    &:has(input:disabled) {
      opacity: 0.5;
      pointer-events: none;
    }
  }

  &[open] {
    [select] {
      box-shadow: 0 0 0 2px inset var(--primary);
      border-radius: var(--xxs) var(--xxs) 0 0;

      [label] {
        color: var(--primary);
      }
    }

    [options] {
      display: flex;
      max-height: calc(var(--component-md) * 4.5);
      box-shadow: 0 0 0 1px inset var(--outline), 0 2px 5px #0004;
    }

    [expand] {
      transform: scaleY(-1);
    }
  }

  [other] {
    display: none;
  }
}
